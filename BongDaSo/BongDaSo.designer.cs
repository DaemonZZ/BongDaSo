#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BongDaSo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BongDaSo")]
	public partial class BongDaSoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBangDiem(BangDiem instance);
    partial void UpdateBangDiem(BangDiem instance);
    partial void DeleteBangDiem(BangDiem instance);
    partial void InsertBinhLuan(BinhLuan instance);
    partial void UpdateBinhLuan(BinhLuan instance);
    partial void DeleteBinhLuan(BinhLuan instance);
    partial void InsertDoiBong(DoiBong instance);
    partial void UpdateDoiBong(DoiBong instance);
    partial void DeleteDoiBong(DoiBong instance);
    partial void InsertGiaiDau(GiaiDau instance);
    partial void UpdateGiaiDau(GiaiDau instance);
    partial void DeleteGiaiDau(GiaiDau instance);
    partial void InsertLoaiTin(LoaiTin instance);
    partial void UpdateLoaiTin(LoaiTin instance);
    partial void DeleteLoaiTin(LoaiTin instance);
    partial void InsertLoaiUser(LoaiUser instance);
    partial void UpdateLoaiUser(LoaiUser instance);
    partial void DeleteLoaiUser(LoaiUser instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertLichThiDau(LichThiDau instance);
    partial void UpdateLichThiDau(LichThiDau instance);
    partial void DeleteLichThiDau(LichThiDau instance);
    partial void InsertTinhTrang(TinhTrang instance);
    partial void UpdateTinhTrang(TinhTrang instance);
    partial void DeleteTinhTrang(TinhTrang instance);
    partial void InsertTinTuc(TinTuc instance);
    partial void UpdateTinTuc(TinTuc instance);
    partial void DeleteTinTuc(TinTuc instance);
    #endregion
		
		public BongDaSoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BongDaSoConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BongDaSoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BongDaSoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BongDaSoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BongDaSoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BangDiem> BangDiems
		{
			get
			{
				return this.GetTable<BangDiem>();
			}
		}
		
		public System.Data.Linq.Table<BinhLuan> BinhLuans
		{
			get
			{
				return this.GetTable<BinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<DoiBong> DoiBongs
		{
			get
			{
				return this.GetTable<DoiBong>();
			}
		}
		
		public System.Data.Linq.Table<GiaiDau> GiaiDaus
		{
			get
			{
				return this.GetTable<GiaiDau>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTin> LoaiTins
		{
			get
			{
				return this.GetTable<LoaiTin>();
			}
		}
		
		public System.Data.Linq.Table<LoaiUser> LoaiUsers
		{
			get
			{
				return this.GetTable<LoaiUser>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<LichThiDau> LichThiDaus
		{
			get
			{
				return this.GetTable<LichThiDau>();
			}
		}
		
		public System.Data.Linq.Table<TinhTrang> TinhTrangs
		{
			get
			{
				return this.GetTable<TinhTrang>();
			}
		}
		
		public System.Data.Linq.Table<TinTuc> TinTucs
		{
			get
			{
				return this.GetTable<TinTuc>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Users_Search")]
		public ISingleResult<Users_SearchResult> Users_Search([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string user, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user, pass);
			return ((ISingleResult<Users_SearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TinTuc_Insert")]
		public int TinTuc_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string tomTat, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string cover, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string noidung, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_User, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> ngayDang, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idLoai, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idGiaiDau)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, title, tomTat, cover, noidung, id_User, ngayDang, idLoai, idGiaiDau);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangDiem")]
	public partial class BangDiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _id_Giai;
		
		private System.Nullable<int> _id_DoiBong;
		
		private System.Nullable<int> _diem;
		
		private EntityRef<DoiBong> _DoiBong;
		
		private EntityRef<GiaiDau> _GiaiDau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_GiaiChanging(System.Nullable<int> value);
    partial void Onid_GiaiChanged();
    partial void Onid_DoiBongChanging(System.Nullable<int> value);
    partial void Onid_DoiBongChanged();
    partial void OndiemChanging(System.Nullable<int> value);
    partial void OndiemChanged();
    #endregion
		
		public BangDiem()
		{
			this._DoiBong = default(EntityRef<DoiBong>);
			this._GiaiDau = default(EntityRef<GiaiDau>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Giai", DbType="Int")]
		public System.Nullable<int> id_Giai
		{
			get
			{
				return this._id_Giai;
			}
			set
			{
				if ((this._id_Giai != value))
				{
					if (this._GiaiDau.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_GiaiChanging(value);
					this.SendPropertyChanging();
					this._id_Giai = value;
					this.SendPropertyChanged("id_Giai");
					this.Onid_GiaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_DoiBong", DbType="Int")]
		public System.Nullable<int> id_DoiBong
		{
			get
			{
				return this._id_DoiBong;
			}
			set
			{
				if ((this._id_DoiBong != value))
				{
					if (this._DoiBong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_DoiBongChanging(value);
					this.SendPropertyChanging();
					this._id_DoiBong = value;
					this.SendPropertyChanged("id_DoiBong");
					this.Onid_DoiBongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diem", DbType="Int")]
		public System.Nullable<int> diem
		{
			get
			{
				return this._diem;
			}
			set
			{
				if ((this._diem != value))
				{
					this.OndiemChanging(value);
					this.SendPropertyChanging();
					this._diem = value;
					this.SendPropertyChanged("diem");
					this.OndiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoiBong_BangDiem", Storage="_DoiBong", ThisKey="id_DoiBong", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public DoiBong DoiBong
		{
			get
			{
				return this._DoiBong.Entity;
			}
			set
			{
				DoiBong previousValue = this._DoiBong.Entity;
				if (((previousValue != value) 
							|| (this._DoiBong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoiBong.Entity = null;
						previousValue.BangDiems.Remove(this);
					}
					this._DoiBong.Entity = value;
					if ((value != null))
					{
						value.BangDiems.Add(this);
						this._id_DoiBong = value.id;
					}
					else
					{
						this._id_DoiBong = default(Nullable<int>);
					}
					this.SendPropertyChanged("DoiBong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaiDau_BangDiem", Storage="_GiaiDau", ThisKey="id_Giai", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public GiaiDau GiaiDau
		{
			get
			{
				return this._GiaiDau.Entity;
			}
			set
			{
				GiaiDau previousValue = this._GiaiDau.Entity;
				if (((previousValue != value) 
							|| (this._GiaiDau.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaiDau.Entity = null;
						previousValue.BangDiems.Remove(this);
					}
					this._GiaiDau.Entity = value;
					if ((value != null))
					{
						value.BangDiems.Add(this);
						this._id_Giai = value.id;
					}
					else
					{
						this._id_Giai = default(Nullable<int>);
					}
					this.SendPropertyChanged("GiaiDau");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BinhLuan")]
	public partial class BinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _id_TinTuc;
		
		private System.Nullable<int> _userID;
		
		private System.Nullable<System.DateTime> _ngayDang;
		
		private System.Nullable<System.TimeSpan> _gioDang;
		
		private string _noiDung;
		
		private EntityRef<User> _User;
		
		private EntityRef<TinTuc> _TinTuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_TinTucChanging(System.Nullable<int> value);
    partial void Onid_TinTucChanged();
    partial void OnuserIDChanging(System.Nullable<int> value);
    partial void OnuserIDChanged();
    partial void OnngayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnngayDangChanged();
    partial void OngioDangChanging(System.Nullable<System.TimeSpan> value);
    partial void OngioDangChanged();
    partial void OnnoiDungChanging(string value);
    partial void OnnoiDungChanged();
    #endregion
		
		public BinhLuan()
		{
			this._User = default(EntityRef<User>);
			this._TinTuc = default(EntityRef<TinTuc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_TinTuc", DbType="Int")]
		public System.Nullable<int> id_TinTuc
		{
			get
			{
				return this._id_TinTuc;
			}
			set
			{
				if ((this._id_TinTuc != value))
				{
					if (this._TinTuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_TinTucChanging(value);
					this.SendPropertyChanging();
					this._id_TinTuc = value;
					this.SendPropertyChanged("id_TinTuc");
					this.Onid_TinTucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int")]
		public System.Nullable<int> userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayDang", DbType="Date")]
		public System.Nullable<System.DateTime> ngayDang
		{
			get
			{
				return this._ngayDang;
			}
			set
			{
				if ((this._ngayDang != value))
				{
					this.OnngayDangChanging(value);
					this.SendPropertyChanging();
					this._ngayDang = value;
					this.SendPropertyChanged("ngayDang");
					this.OnngayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioDang", DbType="Time")]
		public System.Nullable<System.TimeSpan> gioDang
		{
			get
			{
				return this._gioDang;
			}
			set
			{
				if ((this._gioDang != value))
				{
					this.OngioDangChanging(value);
					this.SendPropertyChanging();
					this._gioDang = value;
					this.SendPropertyChanged("gioDang");
					this.OngioDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiDung", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string noiDung
		{
			get
			{
				return this._noiDung;
			}
			set
			{
				if ((this._noiDung != value))
				{
					this.OnnoiDungChanging(value);
					this.SendPropertyChanging();
					this._noiDung = value;
					this.SendPropertyChanged("noiDung");
					this.OnnoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BinhLuan", Storage="_User", ThisKey="userID", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._userID = value.id;
					}
					else
					{
						this._userID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinTuc_BinhLuan", Storage="_TinTuc", ThisKey="id_TinTuc", OtherKey="id", IsForeignKey=true)]
		public TinTuc TinTuc
		{
			get
			{
				return this._TinTuc.Entity;
			}
			set
			{
				TinTuc previousValue = this._TinTuc.Entity;
				if (((previousValue != value) 
							|| (this._TinTuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinTuc.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._TinTuc.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._id_TinTuc = value.id;
					}
					else
					{
						this._id_TinTuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("TinTuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoiBong")]
	public partial class DoiBong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenDoi;
		
		private string _kiHieu;
		
		private EntitySet<BangDiem> _BangDiems;
		
		private EntitySet<LichThiDau> _LichThiDaus;
		
		private EntitySet<LichThiDau> _LichThiDaus1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenDoiChanging(string value);
    partial void OntenDoiChanged();
    partial void OnkiHieuChanging(string value);
    partial void OnkiHieuChanged();
    #endregion
		
		public DoiBong()
		{
			this._BangDiems = new EntitySet<BangDiem>(new Action<BangDiem>(this.attach_BangDiems), new Action<BangDiem>(this.detach_BangDiems));
			this._LichThiDaus = new EntitySet<LichThiDau>(new Action<LichThiDau>(this.attach_LichThiDaus), new Action<LichThiDau>(this.detach_LichThiDaus));
			this._LichThiDaus1 = new EntitySet<LichThiDau>(new Action<LichThiDau>(this.attach_LichThiDaus1), new Action<LichThiDau>(this.detach_LichThiDaus1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenDoi", DbType="NVarChar(50)")]
		public string tenDoi
		{
			get
			{
				return this._tenDoi;
			}
			set
			{
				if ((this._tenDoi != value))
				{
					this.OntenDoiChanging(value);
					this.SendPropertyChanging();
					this._tenDoi = value;
					this.SendPropertyChanged("tenDoi");
					this.OntenDoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kiHieu", DbType="NVarChar(MAX)")]
		public string kiHieu
		{
			get
			{
				return this._kiHieu;
			}
			set
			{
				if ((this._kiHieu != value))
				{
					this.OnkiHieuChanging(value);
					this.SendPropertyChanging();
					this._kiHieu = value;
					this.SendPropertyChanged("kiHieu");
					this.OnkiHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoiBong_BangDiem", Storage="_BangDiems", ThisKey="id", OtherKey="id_DoiBong")]
		public EntitySet<BangDiem> BangDiems
		{
			get
			{
				return this._BangDiems;
			}
			set
			{
				this._BangDiems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoiBong_LichThiDau", Storage="_LichThiDaus", ThisKey="id", OtherKey="maDoiNha")]
		public EntitySet<LichThiDau> LichThiDaus
		{
			get
			{
				return this._LichThiDaus;
			}
			set
			{
				this._LichThiDaus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoiBong_LichThiDau1", Storage="_LichThiDaus1", ThisKey="id", OtherKey="maDoiKhach")]
		public EntitySet<LichThiDau> LichThiDaus1
		{
			get
			{
				return this._LichThiDaus1;
			}
			set
			{
				this._LichThiDaus1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangDiems(BangDiem entity)
		{
			this.SendPropertyChanging();
			entity.DoiBong = this;
		}
		
		private void detach_BangDiems(BangDiem entity)
		{
			this.SendPropertyChanging();
			entity.DoiBong = null;
		}
		
		private void attach_LichThiDaus(LichThiDau entity)
		{
			this.SendPropertyChanging();
			entity.DoiBong = this;
		}
		
		private void detach_LichThiDaus(LichThiDau entity)
		{
			this.SendPropertyChanging();
			entity.DoiBong = null;
		}
		
		private void attach_LichThiDaus1(LichThiDau entity)
		{
			this.SendPropertyChanging();
			entity.DoiBong1 = this;
		}
		
		private void detach_LichThiDaus1(LichThiDau entity)
		{
			this.SendPropertyChanging();
			entity.DoiBong1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaiDau")]
	public partial class GiaiDau : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenGiai;
		
		private EntitySet<BangDiem> _BangDiems;
		
		private EntitySet<LichThiDau> _LichThiDaus;
		
		private EntitySet<TinTuc> _TinTucs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenGiaiChanging(string value);
    partial void OntenGiaiChanged();
    #endregion
		
		public GiaiDau()
		{
			this._BangDiems = new EntitySet<BangDiem>(new Action<BangDiem>(this.attach_BangDiems), new Action<BangDiem>(this.detach_BangDiems));
			this._LichThiDaus = new EntitySet<LichThiDau>(new Action<LichThiDau>(this.attach_LichThiDaus), new Action<LichThiDau>(this.detach_LichThiDaus));
			this._TinTucs = new EntitySet<TinTuc>(new Action<TinTuc>(this.attach_TinTucs), new Action<TinTuc>(this.detach_TinTucs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenGiai", DbType="NVarChar(50)")]
		public string tenGiai
		{
			get
			{
				return this._tenGiai;
			}
			set
			{
				if ((this._tenGiai != value))
				{
					this.OntenGiaiChanging(value);
					this.SendPropertyChanging();
					this._tenGiai = value;
					this.SendPropertyChanged("tenGiai");
					this.OntenGiaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaiDau_BangDiem", Storage="_BangDiems", ThisKey="id", OtherKey="id_Giai")]
		public EntitySet<BangDiem> BangDiems
		{
			get
			{
				return this._BangDiems;
			}
			set
			{
				this._BangDiems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaiDau_LichThiDau", Storage="_LichThiDaus", ThisKey="id", OtherKey="id_Giai")]
		public EntitySet<LichThiDau> LichThiDaus
		{
			get
			{
				return this._LichThiDaus;
			}
			set
			{
				this._LichThiDaus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaiDau_TinTuc", Storage="_TinTucs", ThisKey="id", OtherKey="idGiaiDau")]
		public EntitySet<TinTuc> TinTucs
		{
			get
			{
				return this._TinTucs;
			}
			set
			{
				this._TinTucs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangDiems(BangDiem entity)
		{
			this.SendPropertyChanging();
			entity.GiaiDau = this;
		}
		
		private void detach_BangDiems(BangDiem entity)
		{
			this.SendPropertyChanging();
			entity.GiaiDau = null;
		}
		
		private void attach_LichThiDaus(LichThiDau entity)
		{
			this.SendPropertyChanging();
			entity.GiaiDau = this;
		}
		
		private void detach_LichThiDaus(LichThiDau entity)
		{
			this.SendPropertyChanging();
			entity.GiaiDau = null;
		}
		
		private void attach_TinTucs(TinTuc entity)
		{
			this.SendPropertyChanging();
			entity.GiaiDau = this;
		}
		
		private void detach_TinTucs(TinTuc entity)
		{
			this.SendPropertyChanging();
			entity.GiaiDau = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTin")]
	public partial class LoaiTin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenLoai;
		
		private EntitySet<TinTuc> _TinTucs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenLoaiChanging(string value);
    partial void OntenLoaiChanged();
    #endregion
		
		public LoaiTin()
		{
			this._TinTucs = new EntitySet<TinTuc>(new Action<TinTuc>(this.attach_TinTucs), new Action<TinTuc>(this.detach_TinTucs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLoai", DbType="NVarChar(50)")]
		public string tenLoai
		{
			get
			{
				return this._tenLoai;
			}
			set
			{
				if ((this._tenLoai != value))
				{
					this.OntenLoaiChanging(value);
					this.SendPropertyChanging();
					this._tenLoai = value;
					this.SendPropertyChanged("tenLoai");
					this.OntenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTin_TinTuc", Storage="_TinTucs", ThisKey="id", OtherKey="idLoai")]
		public EntitySet<TinTuc> TinTucs
		{
			get
			{
				return this._TinTucs;
			}
			set
			{
				this._TinTucs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TinTucs(TinTuc entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTin = this;
		}
		
		private void detach_TinTucs(TinTuc entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiUser")]
	public partial class LoaiUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tenLoai;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenLoaiChanging(string value);
    partial void OntenLoaiChanged();
    #endregion
		
		public LoaiUser()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLoai", DbType="NVarChar(25)")]
		public string tenLoai
		{
			get
			{
				return this._tenLoai;
			}
			set
			{
				if ((this._tenLoai != value))
				{
					this.OntenLoaiChanging(value);
					this.SendPropertyChanging();
					this._tenLoai = value;
					this.SendPropertyChanged("tenLoai");
					this.OntenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiUser_User", Storage="_Users", ThisKey="id", OtherKey="id_loai")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.LoaiUser = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.LoaiUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _userName;
		
		private string _pass;
		
		private System.Nullable<int> _id_loai;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntitySet<TinTuc> _TinTucs;
		
		private EntityRef<LoaiUser> _LoaiUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void Onid_loaiChanging(System.Nullable<int> value);
    partial void Onid_loaiChanged();
    #endregion
		
		public User()
		{
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._TinTucs = new EntitySet<TinTuc>(new Action<TinTuc>(this.attach_TinTucs), new Action<TinTuc>(this.detach_TinTucs));
			this._LoaiUser = default(EntityRef<LoaiUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(50)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="NVarChar(50)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_loai", DbType="Int")]
		public System.Nullable<int> id_loai
		{
			get
			{
				return this._id_loai;
			}
			set
			{
				if ((this._id_loai != value))
				{
					if (this._LoaiUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_loaiChanging(value);
					this.SendPropertyChanging();
					this._id_loai = value;
					this.SendPropertyChanged("id_loai");
					this.Onid_loaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BinhLuan", Storage="_BinhLuans", ThisKey="id", OtherKey="userID")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TinTuc", Storage="_TinTucs", ThisKey="id", OtherKey="id_User")]
		public EntitySet<TinTuc> TinTucs
		{
			get
			{
				return this._TinTucs;
			}
			set
			{
				this._TinTucs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiUser_User", Storage="_LoaiUser", ThisKey="id_loai", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public LoaiUser LoaiUser
		{
			get
			{
				return this._LoaiUser.Entity;
			}
			set
			{
				LoaiUser previousValue = this._LoaiUser.Entity;
				if (((previousValue != value) 
							|| (this._LoaiUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiUser.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._LoaiUser.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._id_loai = value.id;
					}
					else
					{
						this._id_loai = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TinTucs(TinTuc entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TinTucs(TinTuc entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichThiDau")]
	public partial class LichThiDau : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _id_Giai;
		
		private System.Nullable<System.DateTime> _ngay;
		
		private System.Nullable<System.TimeSpan> _gio;
		
		private System.Nullable<int> _maDoiNha;
		
		private System.Nullable<int> _maDoiKhach;
		
		private System.Nullable<int> _diemDoiNha;
		
		private System.Nullable<int> _diemDoiKhach;
		
		private System.Nullable<int> _ketQua;
		
		private EntityRef<DoiBong> _DoiBong;
		
		private EntityRef<DoiBong> _DoiBong1;
		
		private EntityRef<GiaiDau> _GiaiDau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_GiaiChanging(System.Nullable<int> value);
    partial void Onid_GiaiChanged();
    partial void OnngayChanging(System.Nullable<System.DateTime> value);
    partial void OnngayChanged();
    partial void OngioChanging(System.Nullable<System.TimeSpan> value);
    partial void OngioChanged();
    partial void OnmaDoiNhaChanging(System.Nullable<int> value);
    partial void OnmaDoiNhaChanged();
    partial void OnmaDoiKhachChanging(System.Nullable<int> value);
    partial void OnmaDoiKhachChanged();
    partial void OndiemDoiNhaChanging(System.Nullable<int> value);
    partial void OndiemDoiNhaChanged();
    partial void OndiemDoiKhachChanging(System.Nullable<int> value);
    partial void OndiemDoiKhachChanged();
    partial void OnketQuaChanging(System.Nullable<int> value);
    partial void OnketQuaChanged();
    #endregion
		
		public LichThiDau()
		{
			this._DoiBong = default(EntityRef<DoiBong>);
			this._DoiBong1 = default(EntityRef<DoiBong>);
			this._GiaiDau = default(EntityRef<GiaiDau>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Giai", DbType="Int")]
		public System.Nullable<int> id_Giai
		{
			get
			{
				return this._id_Giai;
			}
			set
			{
				if ((this._id_Giai != value))
				{
					if (this._GiaiDau.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_GiaiChanging(value);
					this.SendPropertyChanging();
					this._id_Giai = value;
					this.SendPropertyChanged("id_Giai");
					this.Onid_GiaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay", DbType="Date")]
		public System.Nullable<System.DateTime> ngay
		{
			get
			{
				return this._ngay;
			}
			set
			{
				if ((this._ngay != value))
				{
					this.OnngayChanging(value);
					this.SendPropertyChanging();
					this._ngay = value;
					this.SendPropertyChanged("ngay");
					this.OnngayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gio", DbType="Time")]
		public System.Nullable<System.TimeSpan> gio
		{
			get
			{
				return this._gio;
			}
			set
			{
				if ((this._gio != value))
				{
					this.OngioChanging(value);
					this.SendPropertyChanging();
					this._gio = value;
					this.SendPropertyChanged("gio");
					this.OngioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDoiNha", DbType="Int")]
		public System.Nullable<int> maDoiNha
		{
			get
			{
				return this._maDoiNha;
			}
			set
			{
				if ((this._maDoiNha != value))
				{
					if (this._DoiBong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDoiNhaChanging(value);
					this.SendPropertyChanging();
					this._maDoiNha = value;
					this.SendPropertyChanged("maDoiNha");
					this.OnmaDoiNhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDoiKhach", DbType="Int")]
		public System.Nullable<int> maDoiKhach
		{
			get
			{
				return this._maDoiKhach;
			}
			set
			{
				if ((this._maDoiKhach != value))
				{
					if (this._DoiBong1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDoiKhachChanging(value);
					this.SendPropertyChanging();
					this._maDoiKhach = value;
					this.SendPropertyChanged("maDoiKhach");
					this.OnmaDoiKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diemDoiNha", DbType="Int")]
		public System.Nullable<int> diemDoiNha
		{
			get
			{
				return this._diemDoiNha;
			}
			set
			{
				if ((this._diemDoiNha != value))
				{
					this.OndiemDoiNhaChanging(value);
					this.SendPropertyChanging();
					this._diemDoiNha = value;
					this.SendPropertyChanged("diemDoiNha");
					this.OndiemDoiNhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diemDoiKhach", DbType="Int")]
		public System.Nullable<int> diemDoiKhach
		{
			get
			{
				return this._diemDoiKhach;
			}
			set
			{
				if ((this._diemDoiKhach != value))
				{
					this.OndiemDoiKhachChanging(value);
					this.SendPropertyChanging();
					this._diemDoiKhach = value;
					this.SendPropertyChanged("diemDoiKhach");
					this.OndiemDoiKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ketQua", DbType="Int")]
		public System.Nullable<int> ketQua
		{
			get
			{
				return this._ketQua;
			}
			set
			{
				if ((this._ketQua != value))
				{
					this.OnketQuaChanging(value);
					this.SendPropertyChanging();
					this._ketQua = value;
					this.SendPropertyChanged("ketQua");
					this.OnketQuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoiBong_LichThiDau", Storage="_DoiBong", ThisKey="maDoiNha", OtherKey="id", IsForeignKey=true)]
		public DoiBong DoiBong
		{
			get
			{
				return this._DoiBong.Entity;
			}
			set
			{
				DoiBong previousValue = this._DoiBong.Entity;
				if (((previousValue != value) 
							|| (this._DoiBong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoiBong.Entity = null;
						previousValue.LichThiDaus.Remove(this);
					}
					this._DoiBong.Entity = value;
					if ((value != null))
					{
						value.LichThiDaus.Add(this);
						this._maDoiNha = value.id;
					}
					else
					{
						this._maDoiNha = default(Nullable<int>);
					}
					this.SendPropertyChanged("DoiBong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoiBong_LichThiDau1", Storage="_DoiBong1", ThisKey="maDoiKhach", OtherKey="id", IsForeignKey=true)]
		public DoiBong DoiBong1
		{
			get
			{
				return this._DoiBong1.Entity;
			}
			set
			{
				DoiBong previousValue = this._DoiBong1.Entity;
				if (((previousValue != value) 
							|| (this._DoiBong1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoiBong1.Entity = null;
						previousValue.LichThiDaus1.Remove(this);
					}
					this._DoiBong1.Entity = value;
					if ((value != null))
					{
						value.LichThiDaus1.Add(this);
						this._maDoiKhach = value.id;
					}
					else
					{
						this._maDoiKhach = default(Nullable<int>);
					}
					this.SendPropertyChanged("DoiBong1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaiDau_LichThiDau", Storage="_GiaiDau", ThisKey="id_Giai", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public GiaiDau GiaiDau
		{
			get
			{
				return this._GiaiDau.Entity;
			}
			set
			{
				GiaiDau previousValue = this._GiaiDau.Entity;
				if (((previousValue != value) 
							|| (this._GiaiDau.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaiDau.Entity = null;
						previousValue.LichThiDaus.Remove(this);
					}
					this._GiaiDau.Entity = value;
					if ((value != null))
					{
						value.LichThiDaus.Add(this);
						this._id_Giai = value.id;
					}
					else
					{
						this._id_Giai = default(Nullable<int>);
					}
					this.SendPropertyChanged("GiaiDau");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinhTrang")]
	public partial class TinhTrang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _TinhTrang1;
		
		private EntitySet<TinTuc> _TinTucs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTinhTrang1Changing(string value);
    partial void OnTinhTrang1Changed();
    #endregion
		
		public TinhTrang()
		{
			this._TinTucs = new EntitySet<TinTuc>(new Action<TinTuc>(this.attach_TinTucs), new Action<TinTuc>(this.detach_TinTucs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TinhTrang", Storage="_TinhTrang1", DbType="NVarChar(50)")]
		public string TinhTrang1
		{
			get
			{
				return this._TinhTrang1;
			}
			set
			{
				if ((this._TinhTrang1 != value))
				{
					this.OnTinhTrang1Changing(value);
					this.SendPropertyChanging();
					this._TinhTrang1 = value;
					this.SendPropertyChanged("TinhTrang1");
					this.OnTinhTrang1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhTrang_TinTuc", Storage="_TinTucs", ThisKey="id", OtherKey="doUuTien")]
		public EntitySet<TinTuc> TinTucs
		{
			get
			{
				return this._TinTucs;
			}
			set
			{
				this._TinTucs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TinTucs(TinTuc entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrang = this;
		}
		
		private void detach_TinTucs(TinTuc entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinTuc")]
	public partial class TinTuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _tomTat;
		
		private string _thumb;
		
		private string _cover;
		
		private string _noiDung;
		
		private System.Nullable<int> _id_User;
		
		private System.Nullable<System.DateTime> _ngayDang;
		
		private System.Nullable<int> _luotXem;
		
		private System.Nullable<int> _doUuTien;
		
		private System.Nullable<int> _idLoai;
		
		private System.Nullable<int> _idGiaiDau;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntityRef<GiaiDau> _GiaiDau;
		
		private EntityRef<LoaiTin> _LoaiTin;
		
		private EntityRef<TinhTrang> _TinhTrang;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OntomTatChanging(string value);
    partial void OntomTatChanged();
    partial void OnthumbChanging(string value);
    partial void OnthumbChanged();
    partial void OncoverChanging(string value);
    partial void OncoverChanged();
    partial void OnnoiDungChanging(string value);
    partial void OnnoiDungChanged();
    partial void Onid_UserChanging(System.Nullable<int> value);
    partial void Onid_UserChanged();
    partial void OnngayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnngayDangChanged();
    partial void OnluotXemChanging(System.Nullable<int> value);
    partial void OnluotXemChanged();
    partial void OndoUuTienChanging(System.Nullable<int> value);
    partial void OndoUuTienChanged();
    partial void OnidLoaiChanging(System.Nullable<int> value);
    partial void OnidLoaiChanged();
    partial void OnidGiaiDauChanging(System.Nullable<int> value);
    partial void OnidGiaiDauChanged();
    #endregion
		
		public TinTuc()
		{
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._GiaiDau = default(EntityRef<GiaiDau>);
			this._LoaiTin = default(EntityRef<LoaiTin>);
			this._TinhTrang = default(EntityRef<TinhTrang>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tomTat", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string tomTat
		{
			get
			{
				return this._tomTat;
			}
			set
			{
				if ((this._tomTat != value))
				{
					this.OntomTatChanging(value);
					this.SendPropertyChanging();
					this._tomTat = value;
					this.SendPropertyChanged("tomTat");
					this.OntomTatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumb", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string thumb
		{
			get
			{
				return this._thumb;
			}
			set
			{
				if ((this._thumb != value))
				{
					this.OnthumbChanging(value);
					this.SendPropertyChanging();
					this._thumb = value;
					this.SendPropertyChanged("thumb");
					this.OnthumbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cover", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string cover
		{
			get
			{
				return this._cover;
			}
			set
			{
				if ((this._cover != value))
				{
					this.OncoverChanging(value);
					this.SendPropertyChanging();
					this._cover = value;
					this.SendPropertyChanged("cover");
					this.OncoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiDung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string noiDung
		{
			get
			{
				return this._noiDung;
			}
			set
			{
				if ((this._noiDung != value))
				{
					this.OnnoiDungChanging(value);
					this.SendPropertyChanging();
					this._noiDung = value;
					this.SendPropertyChanged("noiDung");
					this.OnnoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_User", DbType="Int")]
		public System.Nullable<int> id_User
		{
			get
			{
				return this._id_User;
			}
			set
			{
				if ((this._id_User != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_UserChanging(value);
					this.SendPropertyChanging();
					this._id_User = value;
					this.SendPropertyChanged("id_User");
					this.Onid_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngayDang
		{
			get
			{
				return this._ngayDang;
			}
			set
			{
				if ((this._ngayDang != value))
				{
					this.OnngayDangChanging(value);
					this.SendPropertyChanging();
					this._ngayDang = value;
					this.SendPropertyChanged("ngayDang");
					this.OnngayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luotXem", DbType="Int")]
		public System.Nullable<int> luotXem
		{
			get
			{
				return this._luotXem;
			}
			set
			{
				if ((this._luotXem != value))
				{
					this.OnluotXemChanging(value);
					this.SendPropertyChanging();
					this._luotXem = value;
					this.SendPropertyChanged("luotXem");
					this.OnluotXemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doUuTien", DbType="Int")]
		public System.Nullable<int> doUuTien
		{
			get
			{
				return this._doUuTien;
			}
			set
			{
				if ((this._doUuTien != value))
				{
					if (this._TinhTrang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndoUuTienChanging(value);
					this.SendPropertyChanging();
					this._doUuTien = value;
					this.SendPropertyChanged("doUuTien");
					this.OndoUuTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLoai", DbType="Int")]
		public System.Nullable<int> idLoai
		{
			get
			{
				return this._idLoai;
			}
			set
			{
				if ((this._idLoai != value))
				{
					if (this._LoaiTin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLoaiChanging(value);
					this.SendPropertyChanging();
					this._idLoai = value;
					this.SendPropertyChanged("idLoai");
					this.OnidLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGiaiDau", DbType="Int")]
		public System.Nullable<int> idGiaiDau
		{
			get
			{
				return this._idGiaiDau;
			}
			set
			{
				if ((this._idGiaiDau != value))
				{
					if (this._GiaiDau.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGiaiDauChanging(value);
					this.SendPropertyChanging();
					this._idGiaiDau = value;
					this.SendPropertyChanged("idGiaiDau");
					this.OnidGiaiDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinTuc_BinhLuan", Storage="_BinhLuans", ThisKey="id", OtherKey="id_TinTuc")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaiDau_TinTuc", Storage="_GiaiDau", ThisKey="idGiaiDau", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public GiaiDau GiaiDau
		{
			get
			{
				return this._GiaiDau.Entity;
			}
			set
			{
				GiaiDau previousValue = this._GiaiDau.Entity;
				if (((previousValue != value) 
							|| (this._GiaiDau.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaiDau.Entity = null;
						previousValue.TinTucs.Remove(this);
					}
					this._GiaiDau.Entity = value;
					if ((value != null))
					{
						value.TinTucs.Add(this);
						this._idGiaiDau = value.id;
					}
					else
					{
						this._idGiaiDau = default(Nullable<int>);
					}
					this.SendPropertyChanged("GiaiDau");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTin_TinTuc", Storage="_LoaiTin", ThisKey="idLoai", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public LoaiTin LoaiTin
		{
			get
			{
				return this._LoaiTin.Entity;
			}
			set
			{
				LoaiTin previousValue = this._LoaiTin.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTin.Entity = null;
						previousValue.TinTucs.Remove(this);
					}
					this._LoaiTin.Entity = value;
					if ((value != null))
					{
						value.TinTucs.Add(this);
						this._idLoai = value.id;
					}
					else
					{
						this._idLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiTin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhTrang_TinTuc", Storage="_TinhTrang", ThisKey="doUuTien", OtherKey="id", IsForeignKey=true)]
		public TinhTrang TinhTrang
		{
			get
			{
				return this._TinhTrang.Entity;
			}
			set
			{
				TinhTrang previousValue = this._TinhTrang.Entity;
				if (((previousValue != value) 
							|| (this._TinhTrang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhTrang.Entity = null;
						previousValue.TinTucs.Remove(this);
					}
					this._TinhTrang.Entity = value;
					if ((value != null))
					{
						value.TinTucs.Add(this);
						this._doUuTien = value.id;
					}
					else
					{
						this._doUuTien = default(Nullable<int>);
					}
					this.SendPropertyChanged("TinhTrang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TinTuc", Storage="_User", ThisKey="id_User", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TinTucs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TinTucs.Add(this);
						this._id_User = value.id;
					}
					else
					{
						this._id_User = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.TinTuc = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.TinTuc = null;
		}
	}
	
	public partial class Users_SearchResult
	{
		
		private int _id;
		
		private string _userName;
		
		private string _pass;
		
		private System.Nullable<int> _id_loai;
		
		public Users_SearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(50)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this._userName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="NVarChar(50)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this._pass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_loai", DbType="Int")]
		public System.Nullable<int> id_loai
		{
			get
			{
				return this._id_loai;
			}
			set
			{
				if ((this._id_loai != value))
				{
					this._id_loai = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
